# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, 'version_*' ]
  pull_request:
    branches: [ master, 'version_*' ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7.1', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        #curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        #source $HOME/.poetry/env
        # Somehow the preferred way of installing poetry does not persist the
        # executable, so I had to go with pip
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check autopep8 was run
      run: |
        poetry run autopep8 --recursive --aggressive --diff .
    - name: Check type hints with mypy
      run: |
        poetry run mypy --ignore-missing-imports .
    - name: Run tests and check coverage
      run: |
        # Fail if total coverage is below 95%
        poetry run pytest --cov=. --cov-fail-under=95 tests/
